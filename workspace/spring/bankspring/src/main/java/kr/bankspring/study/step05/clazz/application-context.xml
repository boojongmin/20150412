<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
		
		
	<aop:config>
		<aop:aspect id="serviceTransactionAspect" ref="bankServiceTransactionAop">
			<aop:pointcut id="serviceTransactionPointCut" 
				expression="execution(* kr.bankspring.study.step05.clazz.BankService.dml*(..)))" />
			<aop:around pointcut-ref="serviceTransactionPointCut" method="aroundTransaction"/>
		</aop:aspect>
	</aop:config>

	<bean id="bankServiceTransactionAop" class="kr.bankspring.study.step05.clazz.BankServiceTransactionAop" >
		<constructor-arg ref="transactionTemplate" />
	</bean>

	
	<aop:config>
		<aop:aspect id="daoLogAspect" ref="bankDaoLogAop">
			<aop:pointcut id="daoLogPointCut" expression="execution(* kr.bankspring.study.step05.clazz.BankDao.*(..))" />
			<aop:before pointcut-ref="daoLogPointCut" method="beforeLogger"/>
			<aop:after pointcut-ref="daoLogPointCut" method="afterLogger"/>
			<aop:around pointcut-ref="daoLogPointCut" method="aroundLogger"/>
			<aop:after-returning pointcut-ref="daoLogPointCut" method="afterReturningLogger" returning="returnValue"/>
			<aop:after-throwing pointcut-ref="daoLogPointCut" method="afterThrowingLogger" throwing="exception"/>
		</aop:aspect>
	</aop:config>
	
	<bean id="bankDaoLogAop" class="kr.bankspring.study.step05.clazz.BankDaoLogAop"/>

	<bean id="bankService" class="kr.bankspring.study.step05.clazz.BankService">
		<constructor-arg ref="bankDao"/>
	</bean>
	
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<constructor-arg ref="transactionManager"/>		
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="bankDao" class="kr.bankspring.study.step05.clazz.BankDao">
		<constructor-arg ref="jdbcTemplate"/>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<context:property-placeholder location="kr/bankspring/study/step05/clazz/jdbc.properties"/>
	


</beans>
