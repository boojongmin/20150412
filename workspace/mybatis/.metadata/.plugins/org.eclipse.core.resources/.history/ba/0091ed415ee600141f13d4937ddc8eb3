package com.school.bankjava.test;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.junit.Assert;
import org.junit.Test;

import com.school.bankjava.dao.BankJavaDao;
import com.school.bankjava.mybatis.FactoryManager;
import com.school.bankjava.test.template.AbstractSessionTemplate;
import com.school.bankjava.test.template.SelectUserVoIfNull;
import com.school.bankjava.vo.UsersVo;

public class BankJavaTest {
	private SqlSessionFactory sqlSessionFactory = FactoryManager.sqlSessionFactory;
	private static final String BOOJONGMIN = "boojongmin";
	
	private BankJavaDao dao;
	private UsersVo usersVo;


	@Test
	public void 마이바티스의SqlSessionFactory를가져온다_널이아니기를기대한다_그리고_싱글턴패턴체크(){
		SqlSessionFactory sqlSessionFactory2 = FactoryManager.sqlSessionFactory;
		//when(테스트할 대상 실행)
		//then(assert)
		assertNotNull(sqlSessionFactory);
		assertTrue(sqlSessionFactory == sqlSessionFactory2);
	}
	
	@Test
	public void 프로시저호출확인_각각의테이블에서하나씩데이터가증가됨을확인한다(){
		//given && //then
		int beforeTotalCount;
		int afterTotalCount;
		
		try(SqlSession sqlSession = sqlSessionFactory.openSession()){
			dao = new BankJavaDao(sqlSession);
			beforeTotalCount = dao.getTotalCount();
			dao.callMakeUser("id-" + ((int)(Math.random()*10000)));
			sqlSession.commit();
			afterTotalCount = dao.getTotalCount();
		}
		//when
		assertTrue((beforeTotalCount + 3) == afterTotalCount);
	}
	
	@Test
	public void 사용자조회_파라메터가널인경우마지막에가입된사용자조회(){
		UsersVo usersVo2 ;
		try(SqlSession sqlSession = sqlSessionFactory.openSession()){
			dao = new BankJavaDao(sqlSession);
			usersVo = dao.selectUserVoIfNullSelectLastuser(null);
			
			UsersVo vo = new UsersVo();
			vo.setUserId(BOOJONGMIN);
			usersVo2 = dao.selectUserVoIfNullSelectLastuser(vo);
		}
//		Assert.assertThat(usersVo1, notNullValue());
		Assert.assertNotNull(usersVo);
		assertTrue(usersVo2 != null);
		assertTrue(BOOJONGMIN.equals(usersVo2.getUserId()));
	}
	
	@Test
	public void 사용자조회_파라메터가널인경우마지막에가입된사용자조회_choose(){
		UsersVo usersVo2 ;
		try(SqlSession sqlSession = sqlSessionFactory.openSession()){
			dao = new BankJavaDao(sqlSession);
			usersVo = dao.selectUserVoIfNullSelectLastuser_choose(null);
			
			UsersVo vo = new UsersVo();
			vo.setUserId(BOOJONGMIN);
			usersVo2 = dao.selectUserVoIfNullSelectLastuser_choose(vo);
		}
		Assert.assertNotNull(usersVo);
		assertTrue(usersVo2 != null);
		assertTrue(BOOJONGMIN.equals(usersVo2.getUserId()));
	}
	
	@Test
	public void 사용자조회_trim(){
		AbstractSessionTemplate template = new SelectUserVoIfNull();
		UsersVo vo = (UsersVo)template.work();
		assertTrue(vo != null);
		
	}
	
	
	
	
	
	

	
}
